{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Socialnet",
    "description": "Socialnet API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all users in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user with given ID",
        "responses": {
          "200": {
            "description": "User is found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "patch": {
        "summary": "Update user with given ID",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values or properties",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users/{userId}/follow": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to find",
          "type": "string"
        }
      ],
      "patch": {
        "summary": "Update user with given ID",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values or properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserID"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/photos": {
      "post": {
        "tags": [
          "Photo"
        ],
        "description": "Create new photo in system",
        "parameters": [
          {
            "name": "photo",
            "in": "body",
            "description": "Photo that we want to create",
            "schema": {
              "$ref": "#/definitions/Photo"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New photo is created",
            "schema": {
              "$ref": "#/definitions/Photo"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Photo"
        ],
        "summary": "Get all photos in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Photos"
            }
          }
        }
      }
    },
    "/photos/{photoId}": {
      "parameters": [
        {
          "name": "photoId",
          "in": "path",
          "required": true,
          "description": "ID of photo that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Photo"
        ],
        "summary": "Get photo with given ID",
        "responses": {
          "200": {
            "description": "Photo is found",
            "schema": {
              "$ref": "#/definitions/Photo"
            }
          }
        }
      }
    },
    "/photos/{photoId}/like": {
      "parameters": [
        {
          "name": "photoId",
          "in": "path",
          "required": true,
          "description": "ID of photo that we want to find",
          "type": "string"
        }
      ],
      "patch": {
        "tags": [
          "Photo"
        ],
        "description": "Like photo in system",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Photo is liked",
            "schema": {
              "$ref": "#/definitions/Photo"
            }
          }
        }
      }
    },
    "/photos/{photoId}/comment": {
      "parameters": [
        {
          "name": "photoId",
          "in": "path",
          "required": true,
          "description": "ID of photo that we want to find",
          "type": "string"
        }
      ],
      "patch": {
        "tags": [
          "Photo"
        ],
        "description": "Comment photo in system",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Photo is commented",
            "schema": {
              "$ref": "#/definitions/Photo"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "required": [
        "email",
        "password",
        "nickname",
        "firstName",
        "lastName"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "nickname": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "following": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Users": {
      "type": "array",
      "$ref": "#/definitions/User"
    },
    "Photo": {
      "required": [
        "added",
        "likes",
        "comments",
        "url",
        "author"
      ],
      "properties": {
        "added": {
          "type": "string"
        },
        "likes": {
          "type": "number"
        },
        "comments": {
          "type": "number"
        },
        "url": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "Photos": {
      "type": "array",
      "$ref": "#/definitions/Photo"
    },
    "UserID": {
      "required": [
        "userId"
      ],
      "properties": {
        "userId": {
          "type": "string"
        }
      }
    }
  }
}